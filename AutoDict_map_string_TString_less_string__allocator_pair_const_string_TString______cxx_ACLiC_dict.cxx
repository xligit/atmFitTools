//
// File generated by /nfs/data40/t2k/amissert/ROOT2/root/bin/rootcint at Tue Sep 20 21:13:50 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dInfsdIdata41dIt2kdIamissertdIatmosdIheaddIatmFitToolsdIAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator_Dictionary();
   static void *new_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p = 0);
   static void *newArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(Long_t size, void *p);
   static void delete_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p);
   static void deleteArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p);
   static void destruct_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)
   {
      ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator", "/nfs/data40/t2k/amissert/ROOT2/root/cint/cint/lib/prec_stl/map", 103,
                  typeid(::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator_Dictionary, isa_proxy, 0,
                  sizeof(::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator) );
      instance.SetNew(&new_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator);
      instance.SetNewArray(&newArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator);
      instance.SetDelete(&delete_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator);
      instance.SetDeleteArray(&deleteArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator);
      instance.SetDestructor(&destruct_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)
   {
      return GenerateInitInstanceLocal((::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator_Dictionary();
   static void delete_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void *p);
   static void deleteArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void *p);
   static void destruct_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)
   {
      ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator", "/nfs/data40/t2k/amissert/ROOT2/root/cint/cint/lib/prec_stl/map", 147,
                  typeid(::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator_Dictionary, isa_proxy, 0,
                  sizeof(::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator) );
      instance.SetDelete(&delete_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator);
      instance.SetDeleteArray(&deleteArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator);
      instance.SetDestructor(&destruct_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)
   {
      return GenerateInitInstanceLocal((::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator : new ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator;
   }
   static void *newArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator[nElements] : new ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p) {
      delete ((::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)p);
   }
   static void deleteArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p) {
      delete [] ((::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)p);
   }
   static void destruct_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void *p) {
      typedef ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator

namespace ROOT {
   // Wrapper around operator delete
   static void delete_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void *p) {
      delete ((::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)p);
   }
   static void deleteArray_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void *p) {
      delete [] ((::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)p);
   }
   static void destruct_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void *p) {
      typedef ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator

namespace ROOT {
   void maplEstringcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOTStringgR_Dictionary();
   static void *new_maplEstringcOTStringgR(void *p = 0);
   static void *newArray_maplEstringcOTStringgR(Long_t size, void *p);
   static void delete_maplEstringcOTStringgR(void *p);
   static void deleteArray_maplEstringcOTStringgR(void *p);
   static void destruct_maplEstringcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,TString>*)
   {
      map<string,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,TString>", -2, "/nfs/data40/t2k/amissert/ROOT2/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<string,TString>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOTStringgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,TString>) );
      instance.SetNew(&new_maplEstringcOTStringgR);
      instance.SetNewArray(&newArray_maplEstringcOTStringgR);
      instance.SetDelete(&delete_maplEstringcOTStringgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOTStringgR);
      instance.SetDestructor(&destruct_maplEstringcOTStringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOTStringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,TString> : new map<string,TString>;
   }
   static void *newArray_maplEstringcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,TString>[nElements] : new map<string,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOTStringgR(void *p) {
      delete ((map<string,TString>*)p);
   }
   static void deleteArray_maplEstringcOTStringgR(void *p) {
      delete [] ((map<string,TString>*)p);
   }
   static void destruct_maplEstringcOTStringgR(void *p) {
      typedef map<string,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,TString>

/********************************************************
* /nfs/data41/t2k/amissert/atmos/head/atmFitTools/AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();

extern "C" void G__set_cpp_environmentAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {
  G__cpp_reset_tagtableAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();
}
#include <new>
extern "C" int G__cpp_dllrevAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* map<string,TString,less<string>,allocator<pair<const string,TString> > > */
static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,TString,less<string>,allocator<pair<const string,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >[n];
     } else {
       p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >;
     } else {
       p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,TString,less<string>,allocator<pair<const string,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[0])), *((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[0])), *((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,TString,less<string>,allocator<pair<const string,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,TString,less<string>,allocator<pair<const string,TString> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->operator=(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->begin();
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->end();
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->rend();
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator,bool>* pobj;
         pair<map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator,bool> xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->insert(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->insert(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[0])), *(map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->insert(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[0])), *((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->insert(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->erase(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->erase(*((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[0])), *((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->swap(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,TString,less<string>,allocator<pair<const string,TString> > > G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR;
static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,TString,less<string>,allocator<pair<const string,TString> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) (soff+(sizeof(map<string,TString,less<string>,allocator<pair<const string,TString> > >)*i)))->~G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,TString,less<string>,allocator<pair<const string,TString> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,TString,less<string>,allocator<pair<const string,TString> > >*) (soff))->~G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator */
static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator[n];
     } else {
       p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator;
     } else {
       p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator=(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator==(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) G__getstructoffset())->operator!=(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator;
static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) (soff+(sizeof(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator)*i)))->~G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*) (soff))->~G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator */
static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__getstructoffset())->operator=(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__getstructoffset())->operator->());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator& obj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__getstructoffset())->operator--();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator* pobj;
         map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator xobj = ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) G__getstructoffset())->operator--((int) G__int(libp->para[0]));
         pobj = new map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator;
static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) (soff+(sizeof(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator)*i)))->~G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) (soff))->~G__TmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict__0_1854(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator==(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) libp->para[0].ref, *(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict__0_1855(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) operator!=(*(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) libp->para[0].ref, *(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* map<string,TString,less<string>,allocator<pair<const string,TString> > > */

/* map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator */

/* map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict {
 public:
  G__Sizep2memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict(): p(&G__Sizep2memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict::*p)();
};

size_t G__get_sizep2memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict()
{
  G__Sizep2memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,double,less<int> >",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TString>",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TString,less<int> >",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_string),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TString),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_allocatorlEpairlEconstsPstringcOTStringgRsPgR),0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* map<string,TString,less<string>,allocator<pair<const string,TString> > > */
static void G__setup_memvarmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   { map<string,TString,less<string>,allocator<pair<const string,TString> > > *p; p=(map<string,TString,less<string>,allocator<pair<const string,TString> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator */
static void G__setup_memvarmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator));
   { map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator *p; p=(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator */
static void G__setup_memvarmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator));
   { map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator *p; p=(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR(void) {
   /* map<string,TString,less<string>,allocator<pair<const string,TString> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR));
   G__memfunc_setup("map<string,TString,less<string>,allocator<pair<const string,TString> > >",6876,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_1, 105, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,TString,less<string>,allocator<pair<const string,TString> > >",6876,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_2, 105, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - first u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,TString,less<string>,allocator<pair<const string,TString> > >",6876,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_3, 105, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 0 - first u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,TString,less<string>,allocator<pair<const string,TString> > >",6876,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_4, 105, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_5, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_6, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_7, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_8, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_9, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_11, 107, -1, G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_12, 107, -1, G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_13, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TString), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_14, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,TString>' 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_15, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - position u 'pair<string,TString>' 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - first u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 0 - first u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_19, 107, -1, G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - first u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_23, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_24, 107, -1, G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_25, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_26, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,TString,less<string>,allocator<pair<const string,TString> > >", 7002, G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3298_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator(void) {
   /* map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator));
   G__memfunc_setup("iterator",874,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_1, 105, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iterator",874,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_2, 105, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_3, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 1, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_4, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR), G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_5, 85, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR), G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_6, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_7, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_8, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_9, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_10, 103, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~iterator", 1000, G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3300_0_12, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator(void) {
   /* map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator));
   G__memfunc_setup("reverse_iterator",1733,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_1, 105, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_2, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 1, 1, 1, 1, 0, "u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_3, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR), G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator->",983,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_4, 85, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR), G__defined_typename("map<string,TString,less<string>,allocator<pair<const string,TString> > >::value_type"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_5, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_6, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_7, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator--",966,G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_8, 117, G__get_linked_tagnum(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator), -1, 0, 1, 1, 1, 0, "i - - 0 - a", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reverse_iterator", 1859, G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict_3301_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
   G__memfunc_setup("operator==", 998, G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict__0_1854, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 11 - x u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("operator!=", 970, G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict__0_1855, 103, -1, -1, 0, 2, 1, 1, 8, 
"u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 11 - x u 'map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator' - 11 - y", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR = { "map<int,double,less<int>,allocator<pair<const int,double> > >" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR = { "map<int,TString,less<int>,allocator<pair<const int,TString> > >" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_allocatorlEpairlEconstsPstringcOTStringgRsPgR = { "allocator<pair<const string,TString> >" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR = { "map<string,TString,less<string>,allocator<pair<const string,TString> > >" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR = { "pair<string,TString>" , 115 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator = { "map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator = { "map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator,bool>" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_string.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TString.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_lesslEstringgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_allocatorlEpairlEconstsPstringcOTStringgRsPgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_string);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_lesslEstringgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOdoublecOlesslEintgRcOallocatorlEpairlEconstsPintcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_allocatorlEpairlEconstsPstringcOTStringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR),sizeof(map<string,TString,less<string>,allocator<pair<const string,TString> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR,G__setup_memfuncmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEstringcOTStringgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator),sizeof(map<string,TString,less<string>,allocator<pair<const string,TString> > >::iterator),-1,2816,(char*)NULL,G__setup_memvarmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator,G__setup_memfuncmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_maplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator),sizeof(map<string,TString,less<string>,allocator<pair<const string,TString> > >::reverse_iterator),-1,2560,(char*)NULL,G__setup_memvarmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator,G__setup_memfuncmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dictLN_pairlEmaplEstringcOTStringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTStringgRsPgRsPgRcLcLiteratorcOboolgR);
}
extern "C" void G__cpp_setupAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict()");
  G__set_cpp_environmentAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();
  G__cpp_setup_tagtableAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();

  G__cpp_setup_inheritanceAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();

  G__cpp_setup_typetableAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();

  G__cpp_setup_memvarAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();

  G__cpp_setup_memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();
  G__cpp_setup_globalAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();
  G__cpp_setup_funcAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict();
  return;
}
class G__cpp_setup_initAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict {
  public:
    G__cpp_setup_initAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() { G__add_setup_func("AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict",(G__incsetup)(&G__cpp_setupAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict() { G__remove_setup_func("AutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict"); }
};
G__cpp_setup_initAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict G__cpp_setup_initializerAutoDict_map_string_TString_less_string__allocator_pair_const_string_TString______cxx_ACLiC_dict;

